
ZH_2023_11_06.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006c  00800100  00000810  000008a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000810  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  0080016c  0080016c  00000910  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000910  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000940  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  0000097c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ce3  00000000  00000000  00000b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e78  00000000  00000000  0000280f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f3b  00000000  00000000  00003687  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000384  00000000  00000000  000045c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ef  00000000  00000000  00004948  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a98  00000000  00000000  00005137  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  00005bcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	db c1       	rjmp	.+950    	; 0x3f4 <__vector_15>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e1       	ldi	r30, 0x10	; 16
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 36       	cpi	r26, 0x6C	; 108
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e6       	ldi	r26, 0x6C	; 108
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 38       	cpi	r26, 0x84	; 132
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	c5 d2       	rcall	.+1418   	; 0x64e <main>
  c4:	a3 c3       	rjmp	.+1862   	; 0x80c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <button_init>:
  c8:	e4 e6       	ldi	r30, 0x64	; 100
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	80 7e       	andi	r24, 0xE0	; 224
  d0:	80 83       	st	Z, r24
  d2:	08 95       	ret

000000d4 <button_get>:
  d4:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
  d8:	8f 71       	andi	r24, 0x1F	; 31
  da:	b1 f0       	breq	.+44     	; 0x108 <button_get+0x34>
  dc:	84 30       	cpi	r24, 0x04	; 4
  de:	71 f0       	breq	.+28     	; 0xfc <button_get+0x28>
  e0:	28 f4       	brcc	.+10     	; 0xec <button_get+0x18>
  e2:	81 30       	cpi	r24, 0x01	; 1
  e4:	99 f0       	breq	.+38     	; 0x10c <button_get+0x38>
  e6:	82 30       	cpi	r24, 0x02	; 2
  e8:	39 f0       	breq	.+14     	; 0xf8 <button_get+0x24>
  ea:	04 c0       	rjmp	.+8      	; 0xf4 <button_get+0x20>
  ec:	88 30       	cpi	r24, 0x08	; 8
  ee:	41 f0       	breq	.+16     	; 0x100 <button_get+0x2c>
  f0:	80 31       	cpi	r24, 0x10	; 16
  f2:	41 f0       	breq	.+16     	; 0x104 <button_get+0x30>
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	0b c0       	rjmp	.+22     	; 0x10e <button_get+0x3a>
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	09 c0       	rjmp	.+18     	; 0x10e <button_get+0x3a>
  fc:	83 e0       	ldi	r24, 0x03	; 3
  fe:	07 c0       	rjmp	.+14     	; 0x10e <button_get+0x3a>
 100:	84 e0       	ldi	r24, 0x04	; 4
 102:	05 c0       	rjmp	.+10     	; 0x10e <button_get+0x3a>
 104:	85 e0       	ldi	r24, 0x05	; 5
 106:	03 c0       	rjmp	.+6      	; 0x10e <button_get+0x3a>
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	01 c0       	rjmp	.+2      	; 0x10e <button_get+0x3a>
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <old_but>
 112:	89 17       	cp	r24, r25
 114:	19 f0       	breq	.+6      	; 0x11c <button_get+0x48>
 116:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <old_but>
 11a:	08 95       	ret
 11c:	80 e0       	ldi	r24, 0x00	; 0
 11e:	08 95       	ret

00000120 <lcd_clk>:
 120:	e2 e6       	ldi	r30, 0x62	; 98
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	80 81       	ld	r24, Z
 126:	87 7f       	andi	r24, 0xF7	; 247
 128:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12a:	8f e3       	ldi	r24, 0x3F	; 63
 12c:	9f e1       	ldi	r25, 0x1F	; 31
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <lcd_clk+0xe>
 132:	00 c0       	rjmp	.+0      	; 0x134 <lcd_clk+0x14>
 134:	00 00       	nop
 136:	80 81       	ld	r24, Z
 138:	88 60       	ori	r24, 0x08	; 8
 13a:	80 83       	st	Z, r24
 13c:	8f e3       	ldi	r24, 0x3F	; 63
 13e:	9f e1       	ldi	r25, 0x1F	; 31
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <lcd_clk+0x20>
 144:	00 c0       	rjmp	.+0      	; 0x146 <lcd_clk+0x26>
 146:	00 00       	nop
 148:	80 81       	ld	r24, Z
 14a:	87 7f       	andi	r24, 0xF7	; 247
 14c:	80 83       	st	Z, r24
 14e:	8f e3       	ldi	r24, 0x3F	; 63
 150:	9f e1       	ldi	r25, 0x1F	; 31
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <lcd_clk+0x32>
 156:	00 c0       	rjmp	.+0      	; 0x158 <lcd_clk+0x38>
 158:	00 00       	nop
 15a:	08 95       	ret

0000015c <lcd_send_cmd>:
 15c:	cf 93       	push	r28
 15e:	df 93       	push	r29
 160:	c8 2f       	mov	r28, r24
 162:	e2 e6       	ldi	r30, 0x62	; 98
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	8b 7f       	andi	r24, 0xFB	; 251
 16a:	80 83       	st	Z, r24
 16c:	80 81       	ld	r24, Z
 16e:	8d 7f       	andi	r24, 0xFD	; 253
 170:	80 83       	st	Z, r24
 172:	d1 b1       	in	r29, 0x01	; 1
 174:	8c 2f       	mov	r24, r28
 176:	80 7f       	andi	r24, 0xF0	; 240
 178:	83 b9       	out	0x03, r24	; 3
 17a:	d2 df       	rcall	.-92     	; 0x120 <lcd_clk>
 17c:	20 e1       	ldi	r18, 0x10	; 16
 17e:	c2 9f       	mul	r28, r18
 180:	c0 01       	movw	r24, r0
 182:	11 24       	eor	r1, r1
 184:	83 b9       	out	0x03, r24	; 3
 186:	cc df       	rcall	.-104    	; 0x120 <lcd_clk>
 188:	d3 b9       	out	0x03, r29	; 3
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	08 95       	ret

00000190 <lcd_init>:
 190:	82 b1       	in	r24, 0x02	; 2
 192:	80 6f       	ori	r24, 0xF0	; 240
 194:	82 b9       	out	0x02, r24	; 2
 196:	e1 e6       	ldi	r30, 0x61	; 97
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	88 60       	ori	r24, 0x08	; 8
 19e:	80 83       	st	Z, r24
 1a0:	80 81       	ld	r24, Z
 1a2:	82 60       	ori	r24, 0x02	; 2
 1a4:	80 83       	st	Z, r24
 1a6:	80 81       	ld	r24, Z
 1a8:	84 60       	ori	r24, 0x04	; 4
 1aa:	80 83       	st	Z, r24
 1ac:	83 b1       	in	r24, 0x03	; 3
 1ae:	80 62       	ori	r24, 0x20	; 32
 1b0:	83 b9       	out	0x03, r24	; 3
 1b2:	b6 df       	rcall	.-148    	; 0x120 <lcd_clk>
 1b4:	b5 df       	rcall	.-150    	; 0x120 <lcd_clk>
 1b6:	b4 df       	rcall	.-152    	; 0x120 <lcd_clk>
 1b8:	88 e2       	ldi	r24, 0x28	; 40
 1ba:	d0 df       	rcall	.-96     	; 0x15c <lcd_send_cmd>
 1bc:	88 e2       	ldi	r24, 0x28	; 40
 1be:	ce df       	rcall	.-100    	; 0x15c <lcd_send_cmd>
 1c0:	88 e2       	ldi	r24, 0x28	; 40
 1c2:	cc df       	rcall	.-104    	; 0x15c <lcd_send_cmd>
 1c4:	8c e0       	ldi	r24, 0x0C	; 12
 1c6:	ca df       	rcall	.-108    	; 0x15c <lcd_send_cmd>
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	c8 cf       	rjmp	.-112    	; 0x15c <lcd_send_cmd>
 1cc:	08 95       	ret

000001ce <lcd_data>:
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	c8 2f       	mov	r28, r24
 1d4:	e2 e6       	ldi	r30, 0x62	; 98
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	80 81       	ld	r24, Z
 1da:	8b 7f       	andi	r24, 0xFB	; 251
 1dc:	80 83       	st	Z, r24
 1de:	80 81       	ld	r24, Z
 1e0:	82 60       	ori	r24, 0x02	; 2
 1e2:	80 83       	st	Z, r24
 1e4:	d1 b1       	in	r29, 0x01	; 1
 1e6:	8c 2f       	mov	r24, r28
 1e8:	80 7f       	andi	r24, 0xF0	; 240
 1ea:	83 b9       	out	0x03, r24	; 3
 1ec:	99 df       	rcall	.-206    	; 0x120 <lcd_clk>
 1ee:	20 e1       	ldi	r18, 0x10	; 16
 1f0:	c2 9f       	mul	r28, r18
 1f2:	c0 01       	movw	r24, r0
 1f4:	11 24       	eor	r1, r1
 1f6:	83 b9       	out	0x03, r24	; 3
 1f8:	93 df       	rcall	.-218    	; 0x120 <lcd_clk>
 1fa:	d3 b9       	out	0x03, r29	; 3
 1fc:	df 91       	pop	r29
 1fe:	cf 91       	pop	r28
 200:	08 95       	ret

00000202 <lcd_write_string>:
 202:	cf 93       	push	r28
 204:	df 93       	push	r29
 206:	ec 01       	movw	r28, r24
 208:	02 c0       	rjmp	.+4      	; 0x20e <lcd_write_string+0xc>
 20a:	e1 df       	rcall	.-62     	; 0x1ce <lcd_data>
 20c:	21 96       	adiw	r28, 0x01	; 1
 20e:	88 81       	ld	r24, Y
 210:	81 11       	cpse	r24, r1
 212:	fb cf       	rjmp	.-10     	; 0x20a <lcd_write_string+0x8>
 214:	df 91       	pop	r29
 216:	cf 91       	pop	r28
 218:	08 95       	ret

0000021a <lcd_cur_posi>:
 21a:	cf 93       	push	r28
 21c:	df 93       	push	r29
 21e:	00 d0       	rcall	.+0      	; 0x220 <lcd_cur_posi+0x6>
 220:	00 d0       	rcall	.+0      	; 0x222 <lcd_cur_posi+0x8>
 222:	cd b7       	in	r28, 0x3d	; 61
 224:	de b7       	in	r29, 0x3e	; 62
 226:	60 31       	cpi	r22, 0x10	; 16
 228:	08 f0       	brcs	.+2      	; 0x22c <lcd_cur_posi+0x12>
 22a:	6f e0       	ldi	r22, 0x0F	; 15
 22c:	90 e8       	ldi	r25, 0x80	; 128
 22e:	99 83       	std	Y+1, r25	; 0x01
 230:	90 ec       	ldi	r25, 0xC0	; 192
 232:	9a 83       	std	Y+2, r25	; 0x02
 234:	90 e9       	ldi	r25, 0x90	; 144
 236:	9b 83       	std	Y+3, r25	; 0x03
 238:	90 ed       	ldi	r25, 0xD0	; 208
 23a:	9c 83       	std	Y+4, r25	; 0x04
 23c:	e1 e0       	ldi	r30, 0x01	; 1
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	ec 0f       	add	r30, r28
 242:	fd 1f       	adc	r31, r29
 244:	e8 0f       	add	r30, r24
 246:	f1 1d       	adc	r31, r1
 248:	80 81       	ld	r24, Z
 24a:	86 0f       	add	r24, r22
 24c:	87 df       	rcall	.-242    	; 0x15c <lcd_send_cmd>
 24e:	0f 90       	pop	r0
 250:	0f 90       	pop	r0
 252:	0f 90       	pop	r0
 254:	0f 90       	pop	r0
 256:	df 91       	pop	r29
 258:	cf 91       	pop	r28
 25a:	08 95       	ret

0000025c <led_init>:
 25c:	80 ef       	ldi	r24, 0xF0	; 240
 25e:	87 bb       	out	0x17, r24	; 23
 260:	81 bb       	out	0x11, r24	; 17
 262:	08 95       	ret

00000264 <led_out>:
 264:	98 2f       	mov	r25, r24
 266:	92 95       	swap	r25
 268:	90 7f       	andi	r25, 0xF0	; 240
 26a:	98 bb       	out	0x18, r25	; 24
 26c:	82 bb       	out	0x12, r24	; 18
 26e:	08 95       	ret

00000270 <move_arrow>:
	}
	else
	timer_counter++;
}
void mode2_start_num_count(){
	timer1_CTCmode_init(128, 25000);
 270:	cf 93       	push	r28
 272:	90 91 7a 01 	lds	r25, 0x017A	; 0x80017a <arrow_pos_current>
 276:	89 0f       	add	r24, r25
 278:	c8 2f       	mov	r28, r24
 27a:	c3 70       	andi	r28, 0x03	; 3
 27c:	60 e0       	ldi	r22, 0x00	; 0
 27e:	89 2f       	mov	r24, r25
 280:	cc df       	rcall	.-104    	; 0x21a <lcd_cur_posi>
 282:	80 e2       	ldi	r24, 0x20	; 32
 284:	a4 df       	rcall	.-184    	; 0x1ce <lcd_data>
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	8c 2f       	mov	r24, r28
 28a:	c7 df       	rcall	.-114    	; 0x21a <lcd_cur_posi>
 28c:	8e e3       	ldi	r24, 0x3E	; 62
 28e:	9f df       	rcall	.-194    	; 0x1ce <lcd_data>
 290:	c0 93 7a 01 	sts	0x017A, r28	; 0x80017a <arrow_pos_current>
 294:	cf 91       	pop	r28
 296:	08 95       	ret

00000298 <mode1_led_run>:
 298:	cf 93       	push	r28
 29a:	df 93       	push	r29
 29c:	eb 01       	movw	r28, r22
 29e:	20 91 77 01 	lds	r18, 0x0177	; 0x800177 <counter.2115>
 2a2:	30 91 78 01 	lds	r19, 0x0178	; 0x800178 <counter.2115+0x1>
 2a6:	82 0f       	add	r24, r18
 2a8:	93 1f       	adc	r25, r19
 2aa:	fc 01       	movw	r30, r24
 2ac:	80 81       	ld	r24, Z
 2ae:	da df       	rcall	.-76     	; 0x264 <led_out>
 2b0:	21 97       	sbiw	r28, 0x01	; 1
 2b2:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <counter.2115>
 2b6:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <counter.2115+0x1>
 2ba:	c8 17       	cp	r28, r24
 2bc:	d9 07       	cpc	r29, r25
 2be:	29 f4       	brne	.+10     	; 0x2ca <mode1_led_run+0x32>
 2c0:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <counter.2115+0x1>
 2c4:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <counter.2115>
 2c8:	05 c0       	rjmp	.+10     	; 0x2d4 <mode1_led_run+0x3c>
 2ca:	01 96       	adiw	r24, 0x01	; 1
 2cc:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <counter.2115+0x1>
 2d0:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <counter.2115>
 2d4:	df 91       	pop	r29
 2d6:	cf 91       	pop	r28
 2d8:	08 95       	ret

000002da <mode2_get_number>:
 2da:	0f 93       	push	r16
 2dc:	1f 93       	push	r17
 2de:	cf 93       	push	r28
 2e0:	8c 01       	movw	r16, r24
 2e2:	d9 d1       	rcall	.+946    	; 0x696 <matrix_get>
 2e4:	c8 2f       	mov	r28, r24
 2e6:	8f 3f       	cpi	r24, 0xFF	; 255
 2e8:	39 f1       	breq	.+78     	; 0x338 <mode2_get_number+0x5e>
 2ea:	83 32       	cpi	r24, 0x23	; 35
 2ec:	39 f1       	breq	.+78     	; 0x33c <mode2_get_number+0x62>
 2ee:	6f df       	rcall	.-290    	; 0x1ce <lcd_data>
 2f0:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <counter.2119>
 2f4:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <counter.2119+0x1>
 2f8:	fc 01       	movw	r30, r24
 2fa:	e0 59       	subi	r30, 0x90	; 144
 2fc:	fe 4f       	sbci	r31, 0xFE	; 254
 2fe:	c0 83       	st	Z, r28
 300:	84 30       	cpi	r24, 0x04	; 4
 302:	91 05       	cpc	r25, r1
 304:	11 f0       	breq	.+4      	; 0x30a <mode2_get_number+0x30>
 306:	ca 32       	cpi	r28, 0x2A	; 42
 308:	81 f4       	brne	.+32     	; 0x32a <mode2_get_number+0x50>
 30a:	fc 01       	movw	r30, r24
 30c:	e0 59       	subi	r30, 0x90	; 144
 30e:	fe 4f       	sbci	r31, 0xFE	; 254
 310:	10 82       	st	Z, r1
 312:	80 e7       	ldi	r24, 0x70	; 112
 314:	91 e0       	ldi	r25, 0x01	; 1
 316:	22 d2       	rcall	.+1092   	; 0x75c <atoi>
 318:	f8 01       	movw	r30, r16
 31a:	91 83       	std	Z+1, r25	; 0x01
 31c:	80 83       	st	Z, r24
 31e:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <counter.2119+0x1>
 322:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <counter.2119>
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	0a c0       	rjmp	.+20     	; 0x33e <mode2_get_number+0x64>
 32a:	01 96       	adiw	r24, 0x01	; 1
 32c:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <counter.2119+0x1>
 330:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <counter.2119>
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	03 c0       	rjmp	.+6      	; 0x33e <mode2_get_number+0x64>
 338:	80 e0       	ldi	r24, 0x00	; 0
 33a:	01 c0       	rjmp	.+2      	; 0x33e <mode2_get_number+0x64>
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	cf 91       	pop	r28
 340:	1f 91       	pop	r17
 342:	0f 91       	pop	r16
 344:	08 95       	ret

00000346 <mode2_num_count>:
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	00 d0       	rcall	.+0      	; 0x34c <mode2_num_count+0x6>
 34c:	00 d0       	rcall	.+0      	; 0x34e <mode2_num_count+0x8>
 34e:	00 d0       	rcall	.+0      	; 0x350 <mode2_num_count+0xa>
 350:	cd b7       	in	r28, 0x3d	; 61
 352:	de b7       	in	r29, 0x3e	; 62
 354:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <mode_2_is_first_run>
 358:	81 30       	cpi	r24, 0x01	; 1
 35a:	51 f4       	brne	.+20     	; 0x370 <mode2_num_count+0x2a>
 35c:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <mode_2_is_first_run>
 360:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <mode2_num_stop>
 364:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <mode2_num_stop+0x1>
 368:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <counter.2125+0x1>
 36c:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <counter.2125>
 370:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <__data_end>
 374:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <__data_end+0x1>
 378:	88 3c       	cpi	r24, 0xC8	; 200
 37a:	91 05       	cpc	r25, r1
 37c:	69 f5       	brne	.+90     	; 0x3d8 <mode2_num_count+0x92>
 37e:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <__data_end+0x1>
 382:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <__data_end>
 386:	61 e0       	ldi	r22, 0x01	; 1
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	47 df       	rcall	.-370    	; 0x21a <lcd_cur_posi>
 38c:	4a e0       	ldi	r20, 0x0A	; 10
 38e:	be 01       	movw	r22, r28
 390:	6f 5f       	subi	r22, 0xFF	; 255
 392:	7f 4f       	sbci	r23, 0xFF	; 255
 394:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <counter.2125>
 398:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <counter.2125+0x1>
 39c:	fc d1       	rcall	.+1016   	; 0x796 <__itoa_ncheck>
 39e:	ce 01       	movw	r24, r28
 3a0:	01 96       	adiw	r24, 0x01	; 1
 3a2:	2f df       	rcall	.-418    	; 0x202 <lcd_write_string>
 3a4:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <counter.2125>
 3a8:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <counter.2125+0x1>
 3ac:	20 91 82 01 	lds	r18, 0x0182	; 0x800182 <mode2_num_start>
 3b0:	30 91 83 01 	lds	r19, 0x0183	; 0x800183 <mode2_num_start+0x1>
 3b4:	82 17       	cp	r24, r18
 3b6:	93 07       	cpc	r25, r19
 3b8:	49 f4       	brne	.+18     	; 0x3cc <mode2_num_count+0x86>
 3ba:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <mode2_num_stop>
 3be:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <mode2_num_stop+0x1>
 3c2:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <counter.2125+0x1>
 3c6:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <counter.2125>
 3ca:	0b c0       	rjmp	.+22     	; 0x3e2 <mode2_num_count+0x9c>
 3cc:	01 97       	sbiw	r24, 0x01	; 1
 3ce:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <counter.2125+0x1>
 3d2:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <counter.2125>
 3d6:	05 c0       	rjmp	.+10     	; 0x3e2 <mode2_num_count+0x9c>
 3d8:	01 96       	adiw	r24, 0x01	; 1
 3da:	90 93 6d 01 	sts	0x016D, r25	; 0x80016d <__data_end+0x1>
 3de:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <__data_end>
 3e2:	26 96       	adiw	r28, 0x06	; 6
 3e4:	0f b6       	in	r0, 0x3f	; 63
 3e6:	f8 94       	cli
 3e8:	de bf       	out	0x3e, r29	; 62
 3ea:	0f be       	out	0x3f, r0	; 63
 3ec:	cd bf       	out	0x3d, r28	; 61
 3ee:	df 91       	pop	r29
 3f0:	cf 91       	pop	r28
 3f2:	08 95       	ret

000003f4 <__vector_15>:
 3f4:	1f 92       	push	r1
 3f6:	0f 92       	push	r0
 3f8:	0f b6       	in	r0, 0x3f	; 63
 3fa:	0f 92       	push	r0
 3fc:	11 24       	eor	r1, r1
 3fe:	0b b6       	in	r0, 0x3b	; 59
 400:	0f 92       	push	r0
 402:	2f 93       	push	r18
 404:	3f 93       	push	r19
 406:	4f 93       	push	r20
 408:	5f 93       	push	r21
 40a:	6f 93       	push	r22
 40c:	7f 93       	push	r23
 40e:	8f 93       	push	r24
 410:	9f 93       	push	r25
 412:	af 93       	push	r26
 414:	bf 93       	push	r27
 416:	ef 93       	push	r30
 418:	ff 93       	push	r31
 41a:	95 df       	rcall	.-214    	; 0x346 <mode2_num_count>
 41c:	ff 91       	pop	r31
 41e:	ef 91       	pop	r30
 420:	bf 91       	pop	r27
 422:	af 91       	pop	r26
 424:	9f 91       	pop	r25
 426:	8f 91       	pop	r24
 428:	7f 91       	pop	r23
 42a:	6f 91       	pop	r22
 42c:	5f 91       	pop	r21
 42e:	4f 91       	pop	r20
 430:	3f 91       	pop	r19
 432:	2f 91       	pop	r18
 434:	0f 90       	pop	r0
 436:	0b be       	out	0x3b, r0	; 59
 438:	0f 90       	pop	r0
 43a:	0f be       	out	0x3f, r0	; 63
 43c:	0f 90       	pop	r0
 43e:	1f 90       	pop	r1
 440:	18 95       	reti

00000442 <mode4_lcd_timer>:
}
void mode4_lcd_timer()
{
 442:	0f 93       	push	r16
 444:	1f 93       	push	r17
 446:	cf 93       	push	r28
 448:	df 93       	push	r29
 44a:	00 d0       	rcall	.+0      	; 0x44c <mode4_lcd_timer+0xa>
 44c:	00 d0       	rcall	.+0      	; 0x44e <mode4_lcd_timer+0xc>
 44e:	cd b7       	in	r28, 0x3d	; 61
 450:	de b7       	in	r29, 0x3e	; 62
	char buf[4];
	lcd_cur_posi(LCD_ROW_0,5);
 452:	65 e0       	ldi	r22, 0x05	; 5
 454:	80 e0       	ldi	r24, 0x00	; 0
 456:	e1 de       	rcall	.-574    	; 0x21a <lcd_cur_posi>
	if (sev[0]<10)
 458:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <sev>
 45c:	8a 30       	cpi	r24, 0x0A	; 10
 45e:	18 f4       	brcc	.+6      	; 0x466 <mode4_lcd_timer+0x24>
	{
		lcd_write_string("0");
 460:	84 e4       	ldi	r24, 0x44	; 68
 462:	91 e0       	ldi	r25, 0x01	; 1
 464:	ce de       	rcall	.-612    	; 0x202 <lcd_write_string>
	}
	lcd_write_string(itoa(sev[0],buf,10));
 466:	0b e7       	ldi	r16, 0x7B	; 123
 468:	11 e0       	ldi	r17, 0x01	; 1
 46a:	f8 01       	movw	r30, r16
 46c:	80 81       	ld	r24, Z
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 46e:	4a e0       	ldi	r20, 0x0A	; 10
 470:	be 01       	movw	r22, r28
 472:	6f 5f       	subi	r22, 0xFF	; 255
 474:	7f 4f       	sbci	r23, 0xFF	; 255
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	8e d1       	rcall	.+796    	; 0x796 <__itoa_ncheck>
	lcd_write_string(":");
 47a:	c3 de       	rcall	.-634    	; 0x202 <lcd_write_string>
 47c:	81 e5       	ldi	r24, 0x51	; 81
 47e:	91 e0       	ldi	r25, 0x01	; 1
 480:	c0 de       	rcall	.-640    	; 0x202 <lcd_write_string>
	if (sev[1]<10)
 482:	f8 01       	movw	r30, r16
 484:	81 81       	ldd	r24, Z+1	; 0x01
 486:	8a 30       	cpi	r24, 0x0A	; 10
	{
		lcd_write_string("0");
 488:	18 f4       	brcc	.+6      	; 0x490 <mode4_lcd_timer+0x4e>
 48a:	84 e4       	ldi	r24, 0x44	; 68
 48c:	91 e0       	ldi	r25, 0x01	; 1
 48e:	b9 de       	rcall	.-654    	; 0x202 <lcd_write_string>
	}
	lcd_write_string(itoa(sev[1],buf,10));
 490:	0b e7       	ldi	r16, 0x7B	; 123
 492:	11 e0       	ldi	r17, 0x01	; 1
 494:	f8 01       	movw	r30, r16
 496:	81 81       	ldd	r24, Z+1	; 0x01
 498:	4a e0       	ldi	r20, 0x0A	; 10
 49a:	be 01       	movw	r22, r28
 49c:	6f 5f       	subi	r22, 0xFF	; 255
 49e:	7f 4f       	sbci	r23, 0xFF	; 255
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	79 d1       	rcall	.+754    	; 0x796 <__itoa_ncheck>
	lcd_write_string(":");
 4a4:	ae de       	rcall	.-676    	; 0x202 <lcd_write_string>
 4a6:	81 e5       	ldi	r24, 0x51	; 81
 4a8:	91 e0       	ldi	r25, 0x01	; 1
	if (sev[2]<10)
 4aa:	ab de       	rcall	.-682    	; 0x202 <lcd_write_string>
 4ac:	f8 01       	movw	r30, r16
 4ae:	82 81       	ldd	r24, Z+2	; 0x02
 4b0:	8a 30       	cpi	r24, 0x0A	; 10
	{
		lcd_write_string("0");
 4b2:	18 f4       	brcc	.+6      	; 0x4ba <mode4_lcd_timer+0x78>
 4b4:	84 e4       	ldi	r24, 0x44	; 68
	}
	lcd_write_string(itoa(sev[2],buf,10));
 4b6:	91 e0       	ldi	r25, 0x01	; 1
 4b8:	a4 de       	rcall	.-696    	; 0x202 <lcd_write_string>
 4ba:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <sev+0x2>
 4be:	4a e0       	ldi	r20, 0x0A	; 10
 4c0:	be 01       	movw	r22, r28
 4c2:	6f 5f       	subi	r22, 0xFF	; 255
 4c4:	7f 4f       	sbci	r23, 0xFF	; 255
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	66 d1       	rcall	.+716    	; 0x796 <__itoa_ncheck>
 4ca:	9b de       	rcall	.-714    	; 0x202 <lcd_write_string>

}
 4cc:	0f 90       	pop	r0
 4ce:	0f 90       	pop	r0
 4d0:	0f 90       	pop	r0
 4d2:	0f 90       	pop	r0
 4d4:	df 91       	pop	r29
 4d6:	cf 91       	pop	r28
 4d8:	1f 91       	pop	r17
 4da:	0f 91       	pop	r16
 4dc:	08 95       	ret

000004de <mode4_lcd_time_counter>:
void mode4_lcd_time_counter()
{
	if(sev[2]==59)
 4de:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <sev+0x2>
 4e2:	8b 33       	cpi	r24, 0x3B	; 59
 4e4:	a9 f4       	brne	.+42     	; 0x510 <mode4_lcd_time_counter+0x32>
	{sev[2]=0;
 4e6:	eb e7       	ldi	r30, 0x7B	; 123
 4e8:	f1 e0       	ldi	r31, 0x01	; 1
 4ea:	12 82       	std	Z+2, r1	; 0x02
		if (sev[1]==59)
 4ec:	81 81       	ldd	r24, Z+1	; 0x01
 4ee:	8b 33       	cpi	r24, 0x3B	; 59
 4f0:	59 f4       	brne	.+22     	; 0x508 <mode4_lcd_time_counter+0x2a>
		{sev[1]=0;
 4f2:	11 82       	std	Z+1, r1	; 0x01
			
			if (sev[0]==11)
 4f4:	80 81       	ld	r24, Z
 4f6:	8b 30       	cpi	r24, 0x0B	; 11
 4f8:	19 f4       	brne	.+6      	; 0x500 <mode4_lcd_time_counter+0x22>
			{sev[0]=0;}
 4fa:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <sev>
 4fe:	08 95       	ret
			
			else
			{
				sev[0]++;
 500:	8f 5f       	subi	r24, 0xFF	; 255
 502:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <sev>
 506:	08 95       	ret
			}
		}
		else
		{
		sev[1]++;}
 508:	8f 5f       	subi	r24, 0xFF	; 255
 50a:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <sev+0x1>
 50e:	08 95       	ret
	}
	else{
	sev[2]++;}
 510:	8f 5f       	subi	r24, 0xFF	; 255
 512:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <sev+0x2>
 516:	08 95       	ret

00000518 <mode2_start>:
void mode2_start()
{
	
	uint8_t result;
	getnumer:
		lcd_cur_posi(LCD_ROW_1,1);
 518:	61 e0       	ldi	r22, 0x01	; 1
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	7e de       	rcall	.-772    	; 0x21a <lcd_cur_posi>
		lcd_write_string("           ");//delete row
 51e:	85 e5       	ldi	r24, 0x55	; 85
 520:	91 e0       	ldi	r25, 0x01	; 1
 522:	6f de       	rcall	.-802    	; 0x202 <lcd_write_string>
		lcd_cur_posi(LCD_ROW_1,1);
 524:	61 e0       	ldi	r22, 0x01	; 1
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	78 de       	rcall	.-784    	; 0x21a <lcd_cur_posi>
		lcd_write_string("Start:");		
 52a:	86 e4       	ldi	r24, 0x46	; 70
 52c:	91 e0       	ldi	r25, 0x01	; 1
 52e:	69 de       	rcall	.-814    	; 0x202 <lcd_write_string>
		while(1)
		{
			result=mode2_get_number(&mode2_num_start);
 530:	82 e8       	ldi	r24, 0x82	; 130
 532:	91 e0       	ldi	r25, 0x01	; 1
 534:	d2 de       	rcall	.-604    	; 0x2da <mode2_get_number>
			if (result==1)
 536:	81 30       	cpi	r24, 0x01	; 1
				break;
		}
		lcd_cur_posi(LCD_ROW_1,1);
 538:	d9 f7       	brne	.-10     	; 0x530 <mode2_start+0x18>
 53a:	61 e0       	ldi	r22, 0x01	; 1
		lcd_write_string("           ");//delete row
 53c:	6e de       	rcall	.-804    	; 0x21a <lcd_cur_posi>
 53e:	85 e5       	ldi	r24, 0x55	; 85
 540:	91 e0       	ldi	r25, 0x01	; 1
		lcd_cur_posi(LCD_ROW_1,1);
 542:	5f de       	rcall	.-834    	; 0x202 <lcd_write_string>
 544:	61 e0       	ldi	r22, 0x01	; 1
 546:	81 e0       	ldi	r24, 0x01	; 1
		lcd_write_string("Stop:");
 548:	68 de       	rcall	.-816    	; 0x21a <lcd_cur_posi>
 54a:	8d e4       	ldi	r24, 0x4D	; 77
 54c:	91 e0       	ldi	r25, 0x01	; 1
 54e:	59 de       	rcall	.-846    	; 0x202 <lcd_write_string>

		while(1)
		{
			result=mode2_get_number(&mode2_num_stop);
 550:	80 e8       	ldi	r24, 0x80	; 128
 552:	91 e0       	ldi	r25, 0x01	; 1
 554:	c2 de       	rcall	.-636    	; 0x2da <mode2_get_number>
 556:	81 30       	cpi	r24, 0x01	; 1
			if (result==1)
 558:	d9 f7       	brne	.-10     	; 0x550 <mode2_start+0x38>
 55a:	20 91 82 01 	lds	r18, 0x0182	; 0x800182 <mode2_num_start>
				break;
		}
		
	
	if(mode2_num_start>=mode2_num_stop)
 55e:	30 91 83 01 	lds	r19, 0x0183	; 0x800183 <mode2_num_start+0x1>
 562:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <mode2_num_stop>
 566:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <mode2_num_stop+0x1>
 56a:	28 17       	cp	r18, r24
 56c:	39 07       	cpc	r19, r25
	{
		goto getnumer;
	}
	//start_timer
	lcd_cur_posi(LCD_ROW_1,1);
 56e:	a4 f6       	brge	.-88     	; 0x518 <mode2_start>
 570:	61 e0       	ldi	r22, 0x01	; 1
 572:	81 e0       	ldi	r24, 0x01	; 1
	lcd_write_string("             ");
 574:	52 de       	rcall	.-860    	; 0x21a <lcd_cur_posi>
 576:	83 e5       	ldi	r24, 0x53	; 83
 578:	91 e0       	ldi	r25, 0x01	; 1
 57a:	43 de       	rcall	.-890    	; 0x202 <lcd_write_string>
	mode_2_is_first_run=1;
 57c:	81 e0       	ldi	r24, 0x01	; 1
 57e:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <mode_2_is_first_run>
	timer0_CTCmode_init(128,125);//2ms
 582:	6d e7       	ldi	r22, 0x7D	; 125
 584:	70 e0       	ldi	r23, 0x00	; 0
 586:	80 e8       	ldi	r24, 0x80	; 128
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	b1 c0       	rjmp	.+354    	; 0x6ee <timer0_CTCmode_init>
 58c:	08 95       	ret

0000058e <mode2_stop>:
 58e:	60 e0       	ldi	r22, 0x00	; 0

}

void mode2_stop()
{
	timer0_CTCmode_init(0,0);
 590:	70 e0       	ldi	r23, 0x00	; 0
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	ab d0       	rcall	.+342    	; 0x6ee <timer0_CTCmode_init>
	lcd_cur_posi(LCD_ROW_1,1);
 598:	61 e0       	ldi	r22, 0x01	; 1
 59a:	81 e0       	ldi	r24, 0x01	; 1
 59c:	3e de       	rcall	.-900    	; 0x21a <lcd_cur_posi>
	lcd_write_string("STOP      ");
 59e:	81 e6       	ldi	r24, 0x61	; 97
 5a0:	91 e0       	ldi	r25, 0x01	; 1
 5a2:	2f ce       	rjmp	.-930    	; 0x202 <lcd_write_string>
 5a4:	08 95       	ret

000005a6 <mode1_start>:
}

void mode1_start()
{
	
	lcd_cur_posi(LCD_ROW_1,1);
 5a6:	61 e0       	ldi	r22, 0x01	; 1
 5a8:	81 e0       	ldi	r24, 0x01	; 1
 5aa:	37 de       	rcall	.-914    	; 0x21a <lcd_cur_posi>
	lcd_write_string("             ");
 5ac:	83 e5       	ldi	r24, 0x53	; 83
 5ae:	91 e0       	ldi	r25, 0x01	; 1
 5b0:	28 de       	rcall	.-944    	; 0x202 <lcd_write_string>
	mode_2_is_first_run=1;
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <mode_2_is_first_run>
	timer0_CTCmode_init(128,125);
 5b8:	6d e7       	ldi	r22, 0x7D	; 125
 5ba:	70 e0       	ldi	r23, 0x00	; 0
 5bc:	80 e8       	ldi	r24, 0x80	; 128
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	96 d0       	rcall	.+300    	; 0x6ee <timer0_CTCmode_init>
	mode1_led_run(led_states,1);
 5c2:	61 e0       	ldi	r22, 0x01	; 1
 5c4:	70 e0       	ldi	r23, 0x00	; 0
 5c6:	80 e0       	ldi	r24, 0x00	; 0
 5c8:	91 e0       	ldi	r25, 0x01	; 1
 5ca:	66 ce       	rjmp	.-820    	; 0x298 <mode1_led_run>
 5cc:	08 95       	ret

000005ce <mode1_stop>:
}

void mode1_stop()
{
	timer0_CTCmode_init(0,0);
 5ce:	60 e0       	ldi	r22, 0x00	; 0
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	80 e0       	ldi	r24, 0x00	; 0
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	8b d0       	rcall	.+278    	; 0x6ee <timer0_CTCmode_init>
	lcd_cur_posi(LCD_ROW_1,1);
 5d8:	61 e0       	ldi	r22, 0x01	; 1
 5da:	81 e0       	ldi	r24, 0x01	; 1
 5dc:	1e de       	rcall	.-964    	; 0x21a <lcd_cur_posi>
	lcd_write_string("STOP      ");
 5de:	81 e6       	ldi	r24, 0x61	; 97
 5e0:	91 e0       	ldi	r25, 0x01	; 1
 5e2:	0f ce       	rjmp	.-994    	; 0x202 <lcd_write_string>
 5e4:	08 95       	ret

000005e6 <mode4_start>:
	
}	
void mode4_start()	
{
	mode4_lcd_timer();
 5e6:	2d df       	rcall	.-422    	; 0x442 <mode4_lcd_timer>
	mode4_lcd_time_counter();
 5e8:	7a df       	rcall	.-268    	; 0x4de <mode4_lcd_time_counter>
 5ea:	2f ef       	ldi	r18, 0xFF	; 255
 5ec:	83 ed       	ldi	r24, 0xD3	; 211
 5ee:	90 e3       	ldi	r25, 0x30	; 48
 5f0:	21 50       	subi	r18, 0x01	; 1
 5f2:	80 40       	sbci	r24, 0x00	; 0
 5f4:	90 40       	sbci	r25, 0x00	; 0
 5f6:	e1 f7       	brne	.-8      	; 0x5f0 <mode4_start+0xa>
 5f8:	00 c0       	rjmp	.+0      	; 0x5fa <mode4_start+0x14>
 5fa:	00 00       	nop
 5fc:	08 95       	ret

000005fe <mode4_stop>:
 5fe:	60 e0       	ldi	r22, 0x00	; 0
	_delay_ms(1000);
}
void mode4_stop()
{
	timer0_CTCmode_init(0,0);
 600:	70 e0       	ldi	r23, 0x00	; 0
 602:	80 e0       	ldi	r24, 0x00	; 0
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	73 d0       	rcall	.+230    	; 0x6ee <timer0_CTCmode_init>
	lcd_cur_posi(LCD_ROW_1,1);
 608:	61 e0       	ldi	r22, 0x01	; 1
 60a:	81 e0       	ldi	r24, 0x01	; 1
 60c:	06 de       	rcall	.-1012   	; 0x21a <lcd_cur_posi>
	lcd_write_string("STOP      ");
 60e:	81 e6       	ldi	r24, 0x61	; 97
 610:	91 e0       	ldi	r25, 0x01	; 1
 612:	f7 cd       	rjmp	.-1042   	; 0x202 <lcd_write_string>
 614:	08 95       	ret

00000616 <start>:
}
void start()
{
	switch(arrow_pos_current){
 616:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <arrow_pos_current>
 61a:	81 30       	cpi	r24, 0x01	; 1
 61c:	31 f0       	breq	.+12     	; 0x62a <start+0x14>
 61e:	18 f0       	brcs	.+6      	; 0x626 <start+0x10>
 620:	83 30       	cpi	r24, 0x03	; 3
 622:	29 f0       	breq	.+10     	; 0x62e <start+0x18>
 624:	08 95       	ret
		case 0:
			mode1_start();
 626:	bf cf       	rjmp	.-130    	; 0x5a6 <mode1_start>
			break;
		case 1:
			mode2_start();
 628:	08 95       	ret
			break;
 62a:	76 cf       	rjmp	.-276    	; 0x518 <mode2_start>
		case 2:
			//mode3_start();
			break;
		case 3:
			mode4_start();
 62c:	08 95       	ret
 62e:	db cf       	rjmp	.-74     	; 0x5e6 <mode4_start>
 630:	08 95       	ret

00000632 <stop>:
	}
}

void stop()
{
	switch(arrow_pos_current){
 632:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <arrow_pos_current>
 636:	81 30       	cpi	r24, 0x01	; 1
 638:	31 f0       	breq	.+12     	; 0x646 <stop+0x14>
 63a:	18 f0       	brcs	.+6      	; 0x642 <stop+0x10>
 63c:	83 30       	cpi	r24, 0x03	; 3
 63e:	29 f0       	breq	.+10     	; 0x64a <stop+0x18>
 640:	08 95       	ret
		case 0:
			mode1_stop();
 642:	c5 cf       	rjmp	.-118    	; 0x5ce <mode1_stop>
			break;
		case 1:
			mode2_stop();	
 644:	08 95       	ret
			break;
 646:	a3 cf       	rjmp	.-186    	; 0x58e <mode2_stop>
		case 2:
			//mode3_stop();
			break;
		case 3:
			mode4_stop();
 648:	08 95       	ret
 64a:	d9 cf       	rjmp	.-78     	; 0x5fe <mode4_stop>
 64c:	08 95       	ret

0000064e <main>:
uint8_t mode_2_is_first_run=0;


int main(void)
{
    led_init();
 64e:	06 de       	rcall	.-1012   	; 0x25c <led_init>
	matrix_init();
 650:	1e d0       	rcall	.+60     	; 0x68e <matrix_init>
	lcd_init();
 652:	9e dd       	rcall	.-1220   	; 0x190 <lcd_init>
	button_init();
 654:	39 dd       	rcall	.-1422   	; 0xc8 <button_init>
 656:	3e dd       	rcall	.-1412   	; 0xd4 <button_get>

    while (1) 
    {
		uint8_t but_var = button_get();
 658:	ef e3       	ldi	r30, 0x3F	; 63
 65a:	ff e1       	ldi	r31, 0x1F	; 31
 65c:	31 97       	sbiw	r30, 0x01	; 1
 65e:	f1 f7       	brne	.-4      	; 0x65c <main+0xe>
 660:	00 c0       	rjmp	.+0      	; 0x662 <main+0x14>
 662:	00 00       	nop
 664:	82 30       	cpi	r24, 0x02	; 2
 666:	61 f0       	breq	.+24     	; 0x680 <main+0x32>
		_delay_ms(2);
		switch(but_var){
 668:	18 f4       	brcc	.+6      	; 0x670 <main+0x22>
 66a:	81 30       	cpi	r24, 0x01	; 1
 66c:	31 f0       	breq	.+12     	; 0x67a <main+0x2c>
 66e:	f3 cf       	rjmp	.-26     	; 0x656 <main+0x8>
 670:	83 30       	cpi	r24, 0x03	; 3
 672:	49 f0       	breq	.+18     	; 0x686 <main+0x38>
 674:	84 30       	cpi	r24, 0x04	; 4
 676:	49 f0       	breq	.+18     	; 0x68a <main+0x3c>
 678:	ee cf       	rjmp	.-36     	; 0x656 <main+0x8>
 67a:	81 e0       	ldi	r24, 0x01	; 1
			case 1:
				move_arrow(ARROW_DIRECT_DOWN);
 67c:	f9 dd       	rcall	.-1038   	; 0x270 <move_arrow>
 67e:	eb cf       	rjmp	.-42     	; 0x656 <main+0x8>
				break;
			case 2:
				move_arrow(ARROW_DIRECT_UP);
 680:	8f ef       	ldi	r24, 0xFF	; 255
 682:	f6 dd       	rcall	.-1044   	; 0x270 <move_arrow>
 684:	e8 cf       	rjmp	.-48     	; 0x656 <main+0x8>
				break;
 686:	c7 df       	rcall	.-114    	; 0x616 <start>
			case 3://start mode
				start();
 688:	e6 cf       	rjmp	.-52     	; 0x656 <main+0x8>
 68a:	d3 df       	rcall	.-90     	; 0x632 <stop>
				break;
 68c:	e4 cf       	rjmp	.-56     	; 0x656 <main+0x8>

0000068e <matrix_init>:
 68e:	84 b3       	in	r24, 0x14	; 20
 690:	88 67       	ori	r24, 0x78	; 120
 692:	84 bb       	out	0x14, r24	; 20
 694:	08 95       	ret

00000696 <matrix_get>:
 696:	98 e0       	ldi	r25, 0x08	; 8
 698:	e0 e0       	ldi	r30, 0x00	; 0
 69a:	15 c0       	rjmp	.+42     	; 0x6c6 <matrix_get+0x30>
 69c:	95 bb       	out	0x15, r25	; 21
 69e:	83 b3       	in	r24, 0x13	; 19
 6a0:	87 70       	andi	r24, 0x07	; 7
 6a2:	af e1       	ldi	r26, 0x1F	; 31
 6a4:	be e4       	ldi	r27, 0x4E	; 78
 6a6:	11 97       	sbiw	r26, 0x01	; 1
 6a8:	f1 f7       	brne	.-4      	; 0x6a6 <matrix_get+0x10>
 6aa:	00 c0       	rjmp	.+0      	; 0x6ac <matrix_get+0x16>
 6ac:	00 00       	nop
 6ae:	86 30       	cpi	r24, 0x06	; 6
 6b0:	81 f0       	breq	.+32     	; 0x6d2 <matrix_get+0x3c>
 6b2:	21 e0       	ldi	r18, 0x01	; 1
 6b4:	2e 0f       	add	r18, r30
 6b6:	85 30       	cpi	r24, 0x05	; 5
 6b8:	49 f0       	breq	.+18     	; 0x6cc <matrix_get+0x36>
 6ba:	22 e0       	ldi	r18, 0x02	; 2
 6bc:	2e 0f       	add	r18, r30
 6be:	83 30       	cpi	r24, 0x03	; 3
 6c0:	39 f0       	breq	.+14     	; 0x6d0 <matrix_get+0x3a>
 6c2:	ed 5f       	subi	r30, 0xFD	; 253
 6c4:	99 0f       	add	r25, r25
 6c6:	91 34       	cpi	r25, 0x41	; 65
 6c8:	48 f3       	brcs	.-46     	; 0x69c <matrix_get+0x6>
 6ca:	03 c0       	rjmp	.+6      	; 0x6d2 <matrix_get+0x3c>
 6cc:	e2 2f       	mov	r30, r18
 6ce:	01 c0       	rjmp	.+2      	; 0x6d2 <matrix_get+0x3c>
 6d0:	e2 2f       	mov	r30, r18
 6d2:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <matrix_old_key.1742>
 6d6:	e8 17       	cp	r30, r24
 6d8:	39 f0       	breq	.+14     	; 0x6e8 <matrix_get+0x52>
 6da:	e0 93 7e 01 	sts	0x017E, r30	; 0x80017e <matrix_old_key.1742>
 6de:	f0 e0       	ldi	r31, 0x00	; 0
 6e0:	e1 5f       	subi	r30, 0xF1	; 241
 6e2:	fe 4f       	sbci	r31, 0xFE	; 254
 6e4:	80 81       	ld	r24, Z
 6e6:	08 95       	ret
 6e8:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <matrix_map+0xc>
 6ec:	08 95       	ret

000006ee <timer0_CTCmode_init>:
 6ee:	20 e0       	ldi	r18, 0x00	; 0
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	10 c0       	rjmp	.+32     	; 0x714 <timer0_CTCmode_init+0x26>
 6f4:	f9 01       	movw	r30, r18
 6f6:	ee 0f       	add	r30, r30
 6f8:	ff 1f       	adc	r31, r31
 6fa:	ee 0f       	add	r30, r30
 6fc:	ff 1f       	adc	r31, r31
 6fe:	e2 0f       	add	r30, r18
 700:	f3 1f       	adc	r31, r19
 702:	e4 5e       	subi	r30, 0xE4	; 228
 704:	fe 4f       	sbci	r31, 0xFE	; 254
 706:	40 81       	ld	r20, Z
 708:	51 81       	ldd	r21, Z+1	; 0x01
 70a:	48 17       	cp	r20, r24
 70c:	59 07       	cpc	r21, r25
 70e:	29 f0       	breq	.+10     	; 0x71a <timer0_CTCmode_init+0x2c>
 710:	2f 5f       	subi	r18, 0xFF	; 255
 712:	3f 4f       	sbci	r19, 0xFF	; 255
 714:	28 30       	cpi	r18, 0x08	; 8
 716:	31 05       	cpc	r19, r1
 718:	6c f3       	brlt	.-38     	; 0x6f4 <timer0_CTCmode_init+0x6>
 71a:	f9 01       	movw	r30, r18
 71c:	ee 0f       	add	r30, r30
 71e:	ff 1f       	adc	r31, r31
 720:	ee 0f       	add	r30, r30
 722:	ff 1f       	adc	r31, r31
 724:	2e 0f       	add	r18, r30
 726:	3f 1f       	adc	r19, r31
 728:	f9 01       	movw	r30, r18
 72a:	e4 5e       	subi	r30, 0xE4	; 228
 72c:	fe 4f       	sbci	r31, 0xFE	; 254
 72e:	82 81       	ldd	r24, Z+2	; 0x02
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	9c 01       	movw	r18, r24
 734:	22 0f       	add	r18, r18
 736:	33 1f       	adc	r19, r19
 738:	22 0f       	add	r18, r18
 73a:	33 1f       	adc	r19, r19
 73c:	93 81       	ldd	r25, Z+3	; 0x03
 73e:	89 2f       	mov	r24, r25
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	88 0f       	add	r24, r24
 744:	99 1f       	adc	r25, r25
 746:	94 81       	ldd	r25, Z+4	; 0x04
 748:	82 2b       	or	r24, r18
 74a:	89 2b       	or	r24, r25
 74c:	88 60       	ori	r24, 0x08	; 8
 74e:	83 bf       	out	0x33, r24	; 51
 750:	12 be       	out	0x32, r1	; 50
 752:	82 e0       	ldi	r24, 0x02	; 2
 754:	87 bf       	out	0x37, r24	; 55
 756:	61 bf       	out	0x31, r22	; 49
 758:	78 94       	sei
 75a:	08 95       	ret

0000075c <atoi>:
 75c:	fc 01       	movw	r30, r24
 75e:	88 27       	eor	r24, r24
 760:	99 27       	eor	r25, r25
 762:	e8 94       	clt
 764:	21 91       	ld	r18, Z+
 766:	20 32       	cpi	r18, 0x20	; 32
 768:	e9 f3       	breq	.-6      	; 0x764 <atoi+0x8>
 76a:	29 30       	cpi	r18, 0x09	; 9
 76c:	10 f0       	brcs	.+4      	; 0x772 <atoi+0x16>
 76e:	2e 30       	cpi	r18, 0x0E	; 14
 770:	c8 f3       	brcs	.-14     	; 0x764 <atoi+0x8>
 772:	2b 32       	cpi	r18, 0x2B	; 43
 774:	39 f0       	breq	.+14     	; 0x784 <atoi+0x28>
 776:	2d 32       	cpi	r18, 0x2D	; 45
 778:	31 f4       	brne	.+12     	; 0x786 <atoi+0x2a>
 77a:	68 94       	set
 77c:	03 c0       	rjmp	.+6      	; 0x784 <atoi+0x28>
 77e:	15 d0       	rcall	.+42     	; 0x7aa <__mulhi_const_10>
 780:	82 0f       	add	r24, r18
 782:	91 1d       	adc	r25, r1
 784:	21 91       	ld	r18, Z+
 786:	20 53       	subi	r18, 0x30	; 48
 788:	2a 30       	cpi	r18, 0x0A	; 10
 78a:	c8 f3       	brcs	.-14     	; 0x77e <atoi+0x22>
 78c:	1e f4       	brtc	.+6      	; 0x794 <atoi+0x38>
 78e:	90 95       	com	r25
 790:	81 95       	neg	r24
 792:	9f 4f       	sbci	r25, 0xFF	; 255
 794:	08 95       	ret

00000796 <__itoa_ncheck>:
 796:	bb 27       	eor	r27, r27
 798:	4a 30       	cpi	r20, 0x0A	; 10
 79a:	31 f4       	brne	.+12     	; 0x7a8 <__itoa_ncheck+0x12>
 79c:	99 23       	and	r25, r25
 79e:	22 f4       	brpl	.+8      	; 0x7a8 <__itoa_ncheck+0x12>
 7a0:	bd e2       	ldi	r27, 0x2D	; 45
 7a2:	90 95       	com	r25
 7a4:	81 95       	neg	r24
 7a6:	9f 4f       	sbci	r25, 0xFF	; 255
 7a8:	09 c0       	rjmp	.+18     	; 0x7bc <__utoa_common>

000007aa <__mulhi_const_10>:
 7aa:	7a e0       	ldi	r23, 0x0A	; 10
 7ac:	97 9f       	mul	r25, r23
 7ae:	90 2d       	mov	r25, r0
 7b0:	87 9f       	mul	r24, r23
 7b2:	80 2d       	mov	r24, r0
 7b4:	91 0d       	add	r25, r1
 7b6:	11 24       	eor	r1, r1
 7b8:	08 95       	ret

000007ba <__utoa_ncheck>:
 7ba:	bb 27       	eor	r27, r27

000007bc <__utoa_common>:
 7bc:	fb 01       	movw	r30, r22
 7be:	55 27       	eor	r21, r21
 7c0:	aa 27       	eor	r26, r26
 7c2:	88 0f       	add	r24, r24
 7c4:	99 1f       	adc	r25, r25
 7c6:	aa 1f       	adc	r26, r26
 7c8:	a4 17       	cp	r26, r20
 7ca:	10 f0       	brcs	.+4      	; 0x7d0 <__utoa_common+0x14>
 7cc:	a4 1b       	sub	r26, r20
 7ce:	83 95       	inc	r24
 7d0:	50 51       	subi	r21, 0x10	; 16
 7d2:	b9 f7       	brne	.-18     	; 0x7c2 <__utoa_common+0x6>
 7d4:	a0 5d       	subi	r26, 0xD0	; 208
 7d6:	aa 33       	cpi	r26, 0x3A	; 58
 7d8:	08 f0       	brcs	.+2      	; 0x7dc <__utoa_common+0x20>
 7da:	a9 5d       	subi	r26, 0xD9	; 217
 7dc:	a1 93       	st	Z+, r26
 7de:	00 97       	sbiw	r24, 0x00	; 0
 7e0:	79 f7       	brne	.-34     	; 0x7c0 <__utoa_common+0x4>
 7e2:	b1 11       	cpse	r27, r1
 7e4:	b1 93       	st	Z+, r27
 7e6:	11 92       	st	Z+, r1
 7e8:	cb 01       	movw	r24, r22
 7ea:	00 c0       	rjmp	.+0      	; 0x7ec <strrev>

000007ec <strrev>:
 7ec:	dc 01       	movw	r26, r24
 7ee:	fc 01       	movw	r30, r24
 7f0:	67 2f       	mov	r22, r23
 7f2:	71 91       	ld	r23, Z+
 7f4:	77 23       	and	r23, r23
 7f6:	e1 f7       	brne	.-8      	; 0x7f0 <strrev+0x4>
 7f8:	32 97       	sbiw	r30, 0x02	; 2
 7fa:	04 c0       	rjmp	.+8      	; 0x804 <strrev+0x18>
 7fc:	7c 91       	ld	r23, X
 7fe:	6d 93       	st	X+, r22
 800:	70 83       	st	Z, r23
 802:	62 91       	ld	r22, -Z
 804:	ae 17       	cp	r26, r30
 806:	bf 07       	cpc	r27, r31
 808:	c8 f3       	brcs	.-14     	; 0x7fc <strrev+0x10>
 80a:	08 95       	ret

0000080c <_exit>:
 80c:	f8 94       	cli

0000080e <__stop_program>:
 80e:	ff cf       	rjmp	.-2      	; 0x80e <__stop_program>
